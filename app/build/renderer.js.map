{"version":3,"file":"renderer.js","mappings":"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","sources":["webpack://circle-commander/./app/main/commands.js","webpack://circle-commander/./app/main/events.js","webpack://circle-commander/./app/renderer/batPanel/index.js","webpack://circle-commander/./app/renderer/commandHandlers.js","webpack://circle-commander/./app/renderer/eventHandlers.js","webpack://circle-commander/external node-commonjs \"electron\"","webpack://circle-commander/webpack/bootstrap","webpack://circle-commander/./app/renderer/index.js"],"sourcesContent":["const commands = {\r\n  RUN_BAT: \"runBat\",\r\n  CLOSE_APP: \"closeApp\",\r\n  LOAD_CONFIGURATION: \"loadConfiguration\",\r\n  OPEN_COMMANDER: \"openCommander\",\r\n  CLOSE_COMMANDER_START: \"closeCommanderStart\",\r\n  CLOSE_COMMANDER_END: \"closeCommanderEnd\",\r\n};\r\n\r\nmodule.exports = commands;\r\n","const events = {\r\n  BATS_CONFIGURATION_HAS_BEEN_LOADED: \"batsConfigurationHasBeenLoaded\",\r\n};\r\n\r\nmodule.exports = events;\r\n","const { ipcRenderer } = require(\"electron\");\r\nconst commands = require(\"../../main/commands\");\r\n\r\nlet mainMenu;\r\nlet clossingCommanderIsInProgress = false;\r\n\r\nfunction createBatPanelView(batsConfiguration) {\r\n  const batPanel = document.getElementById(\"bat-panel-buttons\");\r\n\r\n  const buttonExit = document.getElementById(\"button-exit\");\r\n\r\n  if (buttonExit != undefined) {\r\n    buttonExit.addEventListener(\"click\", () => commandCloseApp());\r\n  }\r\n\r\n  document\r\n    .getElementById(\"button-load-config\")\r\n    .addEventListener(\"click\", () => commandLoadConfig());\r\n\r\n  document\r\n    .getElementById(\"circularMainButton\")\r\n    .addEventListener(\"click\", () => openCommander());\r\n\r\n  mainMenu = document.getElementById(\"circularMenu\");\r\n  mainMenu.addEventListener(\"transitionend\", () => {\r\n    console.log(\"transitionend\");\r\n    if (\r\n      !mainMenu.classList.contains(\"active\") &&\r\n      clossingCommanderIsInProgress === false\r\n    ) {\r\n      clossingCommanderIsInProgress = true;\r\n      ipcRenderer.send(commands.CLOSE_COMMANDER_END);\r\n    }\r\n  });\r\n\r\n  batsConfiguration.forEach((batConfig) => {\r\n    let button = createButton(batConfig.name, batConfig.icon, batConfig.path);\r\n    batPanel.prepend(button);\r\n  });\r\n}\r\n\r\nfunction createButton(buttonName, icon, batFileName) {\r\n  let button = document.createElement(\"button\");\r\n  let buttonText = document.createElement(\"div\");\r\n  buttonText.classList.add(`fas`);\r\n  buttonText.classList.add(`fa-${icon}`);\r\n  buttonText.classList.add(\"button-text\");\r\n  button.appendChild(buttonText);\r\n  button.classList.add(\"menu-item\");\r\n  button.onclick = () => commandRunBat(batFileName);\r\n  return button;\r\n}\r\n\r\nfunction commandRunBat(batFileName) {\r\n  ipcRenderer.send(commands.RUN_BAT, batFileName);\r\n}\r\n\r\nfunction commandCloseApp() {\r\n  ipcRenderer.send(commands.CLOSE_APP);\r\n}\r\n\r\nfunction commandLoadConfig() {\r\n  ipcRenderer.send(commands.LOAD_CONFIGURATION);\r\n}\r\n\r\nfunction openCommander() {\r\n  let mainMenu = document.getElementById(\"circularMenu\");\r\n  if (!mainMenu.classList.contains(\"active\")) {\r\n    document.getElementById(\"circularMenu\").classList.toggle(\"active\");\r\n  }\r\n}\r\n\r\nfunction closeCommander() {\r\n  let mainMenu = document.getElementById(\"circularMenu\");\r\n  if (mainMenu.classList.contains(\"active\")) {\r\n    clossingCommanderIsInProgress = false;\r\n    document.getElementById(\"circularMenu\").classList.toggle(\"active\");\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  createBatPanelView,\r\n  openCommander,\r\n  closeCommander,\r\n};\r\n","const { ipcRenderer } = require(\"electron\");\r\n\r\nconst commands = require(\"../main/commands\");\r\n\r\nconst { openCommander, closeCommander } = require(\"./batPanel\");\r\n\r\nfunction registerCommandHandlers() {\r\n  console.log(\"Register command handlers\");\r\n\r\n  ipcRenderer.on(commands.OPEN_COMMANDER, (event, data) => {\r\n    openCommander();\r\n  });\r\n\r\n  ipcRenderer.on(commands.CLOSE_COMMANDER_START, (event, data) => {\r\n    closeCommander();\r\n  });\r\n}\r\n\r\nmodule.exports = registerCommandHandlers;\r\n","const { ipcRenderer } = require(\"electron\");\r\n\r\nconst events = require(\"../main/events\");\r\n\r\nconst { createBatPanelView } = require(\"./batPanel\");\r\n\r\nfunction registerEventHandlers() {\r\n  console.log(\"Register event handlers\");\r\n\r\n  ipcRenderer.on(events.BATS_CONFIGURATION_HAS_BEEN_LOADED, (event, data) => {\r\n    createBatPanelView(data.bats);\r\n  });\r\n}\r\n\r\nmodule.exports = registerEventHandlers;\r\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { ipcRenderer } = require(\"electron\");\r\n\r\nconst registerEventHandlers = require(\"./eventHandlers\");\r\nconst registerCommandHandlers = require(\"./commandHandlers\");\r\n\r\nconst commands = require(\"../main/commands\");\r\n\r\nipcRenderer.send(commands.LOAD_CONFIGURATION);\r\n\r\nregisterEventHandlers();\r\nregisterCommandHandlers();\r\n"],"names":["ipcRenderer","require","commands","mainMenu","clossingCommanderIsInProgress","createBatPanelView","batsConfiguration","batPanel","document","getElementById","buttonExit","undefined","addEventListener","commandCloseApp","commandLoadConfig","openCommander","console","log","classList","contains","send","CLOSE_COMMANDER_END","forEach","batConfig","button","createButton","name","icon","path","prepend","buttonName","batFileName","createElement","buttonText","add","appendChild","onclick","commandRunBat","RUN_BAT","CLOSE_APP","LOAD_CONFIGURATION","toggle","closeCommander","module","exports","registerCommandHandlers","on","OPEN_COMMANDER","event","data","CLOSE_COMMANDER_START","events","registerEventHandlers","BATS_CONFIGURATION_HAS_BEEN_LOADED","bats"],"sourceRoot":""}