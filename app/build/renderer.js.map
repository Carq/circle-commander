{"version":3,"file":"renderer.js","mappings":"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","sources":["webpack://circle-commander/./app/main/commands.js","webpack://circle-commander/./app/main/events.js","webpack://circle-commander/./app/renderer/batPanel/index.js","webpack://circle-commander/./app/renderer/eventHandlers.js","webpack://circle-commander/external node-commonjs \"electron\"","webpack://circle-commander/webpack/bootstrap","webpack://circle-commander/./app/renderer/index.js"],"sourcesContent":["const commands = {\r\n  RUN_BAT: \"runBat\",\r\n  CLOSE_APP: \"closeApp\",\r\n  LOAD_CONFIGURATION: \"loadConfiguration\",\r\n};\r\n\r\nmodule.exports = commands;\r\n","const events = {\r\n  BATS_CONFIGURATION_HAS_BEEN_LOADED: \"batsConfigurationHasBeenLoaded\",\r\n};\r\n\r\nmodule.exports = events;\r\n","const { ipcRenderer } = require(\"electron\");\r\nconst commands = require(\"../../main/commands\");\r\n\r\nfunction createBatPanelView(batsConfiguration) {\r\n  const batPanel = document.getElementById(\"bat-panel-buttons\");\r\n\r\n  document\r\n    .getElementById(\"button-exit\")\r\n    .addEventListener(\"click\", () => commandCloseApp());\r\n\r\n  document\r\n    .getElementById(\"button-load-config\")\r\n    .addEventListener(\"click\", () => commandLoadConfig());\r\n\r\n  document\r\n    .getElementById(\"circularMainButton\")\r\n    .addEventListener(\"click\", () =>\r\n      document.getElementById(\"circularMenu1\").classList.toggle(\"active\")\r\n    );\r\n\r\n  batsConfiguration.forEach((batConfig) => {\r\n    let button = createButton(batConfig.name, batConfig.icon, batConfig.path);\r\n    batPanel.prepend(button);\r\n  });\r\n}\r\n\r\nfunction createButton(buttonName, icon, batFileName) {\r\n  let button = document.createElement(\"button\");\r\n  let buttonText = document.createElement(\"div\");\r\n  buttonText.classList.add(`fas`);\r\n  buttonText.classList.add(`fa-${icon}`);\r\n  buttonText.classList.add(\"button-text\");\r\n  button.appendChild(buttonText);\r\n  button.classList.add(\"menu-item\");\r\n  button.onclick = () => commandRunBat(batFileName);\r\n  return button;\r\n}\r\n\r\nfunction commandRunBat(batFileName) {\r\n  ipcRenderer.send(commands.RUN_BAT, batFileName);\r\n}\r\n\r\nfunction commandCloseApp() {\r\n  ipcRenderer.send(commands.CLOSE_APP);\r\n}\r\n\r\nfunction commandLoadConfig() {\r\n  ipcRenderer.send(commands.LOAD_CONFIGURATION);\r\n}\r\nmodule.exports = {\r\n  createBatPanelView,\r\n};\r\n","const { ipcRenderer } = require(\"electron\");\r\n\r\nconst events = require(\"../main/events\");\r\nconst { createBatPanelView } = require(\"./batPanel\");\r\n\r\nfunction registerEventHandlers() {\r\n  console.log(\"Register event handlers\");\r\n\r\n  ipcRenderer.on(events.BATS_CONFIGURATION_HAS_BEEN_LOADED, (event, data) => {\r\n    createBatPanelView(data.bats);\r\n  });\r\n}\r\n\r\nmodule.exports = registerEventHandlers;\r\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { ipcRenderer } = require(\"electron\");\r\n\r\nconst registerEventHandlers = require(\"./eventHandlers\");\r\nconst commands = require(\"../main/commands\");\r\n\r\nipcRenderer.send(commands.LOAD_CONFIGURATION);\r\nregisterEventHandlers();\r\n"],"names":["ipcRenderer","require","commands","createBatPanelView","batsConfiguration","batPanel","document","getElementById","addEventListener","commandCloseApp","commandLoadConfig","classList","toggle","forEach","batConfig","button","createButton","name","icon","path","prepend","buttonName","batFileName","createElement","buttonText","add","appendChild","onclick","commandRunBat","send","RUN_BAT","CLOSE_APP","LOAD_CONFIGURATION","module","exports","events","registerEventHandlers","console","log","on","BATS_CONFIGURATION_HAS_BEEN_LOADED","event","data","bats"],"sourceRoot":""}